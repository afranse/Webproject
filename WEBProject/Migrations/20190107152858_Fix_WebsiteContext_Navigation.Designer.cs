// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEBProject.Data;

namespace WEBProject.Migrations
{
    [DbContext(typeof(WebsiteContext))]
    [Migration("20190107152858_Fix_WebsiteContext_Navigation")]
    partial class Fix_WebsiteContext_Navigation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WEBProject.Models.Employee_Profile", b =>
                {
                    b.Property<int>("Employee_ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Job");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Employee_ProfileID");

                    b.ToTable("Employee_Profiles");
                });

            modelBuilder.Entity("WEBProject.Models.Employee_Profile_Email", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Employee_ProfileID");

                    b.Property<int>("ProfileID");

                    b.HasKey("Email");

                    b.HasIndex("Employee_ProfileID");

                    b.ToTable("Employee_Profile_Emails");
                });

            modelBuilder.Entity("WEBProject.Models.Employee_Profile_Phone_Number", b =>
                {
                    b.Property<string>("Number")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Employee_ProfileID");

                    b.Property<int?>("ProfileID");

                    b.HasKey("Number");

                    b.HasIndex("Employee_ProfileID");

                    b.ToTable("Employee_Profile_Phone_Numbers");
                });

            modelBuilder.Entity("WEBProject.Models.Language", b =>
                {
                    b.Property<int>("LangID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LangTag")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.HasKey("LangID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("WEBProject.Models.News_Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.HasKey("CategoryID");

                    b.ToTable("News_Categories");
                });

            modelBuilder.Entity("WEBProject.Models.News_Item", b =>
                {
                    b.Property<int>("NewsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID");

                    b.Property<DateTime>("Event_Date");

                    b.Property<DateTime>("Last_Modified_Date");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("NewsID");

                    b.HasIndex("CategoryID");

                    b.ToTable("News_Items");
                });

            modelBuilder.Entity("WEBProject.Models.Photo", b =>
                {
                    b.Property<int>("PhotoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PhotoPath");

                    b.HasKey("PhotoID");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("WEBProject.Models.Photo_News", b =>
                {
                    b.Property<int>("NewsID");

                    b.Property<int>("PhotoID");

                    b.HasKey("NewsID", "PhotoID");

                    b.HasIndex("PhotoID");

                    b.ToTable("Photo_News");
                });

            modelBuilder.Entity("WEBProject.Models.Product", b =>
                {
                    b.Property<int>("ArtikelNumber")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contents");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ArtikelNumber");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WEBProject.Models.Product_Details", b =>
                {
                    b.Property<int>("DetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikelNumber");

                    b.Property<string>("ProductDetails")
                        .IsRequired();

                    b.HasKey("DetailID");

                    b.HasIndex("ArtikelNumber");

                    b.ToTable("Product_Details");
                });

            modelBuilder.Entity("WEBProject.Models.Subscriber", b =>
                {
                    b.Property<int>("SubscriberID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.HasKey("SubscriberID");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("WEBProject.Models.Text", b =>
                {
                    b.Property<int>("TextID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.HasKey("TextID");

                    b.ToTable("Text");
                });

            modelBuilder.Entity("WEBProject.Models.Text_News", b =>
                {
                    b.Property<int>("NewsID");

                    b.Property<int>("TextID");

                    b.HasKey("NewsID", "TextID");

                    b.HasIndex("TextID");

                    b.ToTable("Text_News");
                });

            modelBuilder.Entity("WEBProject.Models.Employee_Profile_Email", b =>
                {
                    b.HasOne("WEBProject.Models.Employee_Profile", "Employee")
                        .WithMany("Emails")
                        .HasForeignKey("Employee_ProfileID");
                });

            modelBuilder.Entity("WEBProject.Models.Employee_Profile_Phone_Number", b =>
                {
                    b.HasOne("WEBProject.Models.Employee_Profile", "Employee")
                        .WithMany("Phone_Numbers")
                        .HasForeignKey("Employee_ProfileID");
                });

            modelBuilder.Entity("WEBProject.Models.News_Item", b =>
                {
                    b.HasOne("WEBProject.Models.News_Category", "News_Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WEBProject.Models.Photo_News", b =>
                {
                    b.HasOne("WEBProject.Models.News_Item", "News")
                        .WithMany("PhotoNews")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WEBProject.Models.Photo", "Photo")
                        .WithMany("PhotoNews")
                        .HasForeignKey("PhotoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WEBProject.Models.Product_Details", b =>
                {
                    b.HasOne("WEBProject.Models.Product", "Product")
                        .WithMany("Details")
                        .HasForeignKey("ArtikelNumber")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WEBProject.Models.Text_News", b =>
                {
                    b.HasOne("WEBProject.Models.News_Item", "News")
                        .WithMany("TextNews")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WEBProject.Models.Text", "Text")
                        .WithMany("TextNews")
                        .HasForeignKey("TextID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
